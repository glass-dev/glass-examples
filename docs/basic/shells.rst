
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "basic/shells.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_basic_shells.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_basic_shells.py:


Matter shell definition
=======================

This example demonstrates how matter shells are defined, and their angular power
spectra computed.

The the angular power spectra are saved here, so that they can be reused in
other examples without recomputing.

.. GENERATED FROM PYTHON SOURCE LINES 15-19

Compute
-------
Here we define the shells for these examples, and use CAMB to compute the
angular matter power spectra for the shell definitions.

.. GENERATED FROM PYTHON SOURCE LINES 19-54

.. code-block:: Python


    import numpy as np
    import camb
    from cosmology import Cosmology

    import glass.shells
    import glass.ext.camb


    # cosmology for the simulation
    h = 0.7
    Oc = 0.25
    Ob = 0.05

    # basic parameters of the simulation
    lmax = 1000

    # set up CAMB parameters for matter angular power spectrum
    pars = camb.set_params(H0=100*h, omch2=Oc*h**2, ombh2=Ob*h**2,
                           NonLinear=camb.model.NonLinear_both)

    # get the cosmology from CAMB
    cosmo = Cosmology.from_camb(pars)

    # shells of 200 Mpc in comoving distance spacing
    zb = glass.shells.distance_grid(cosmo, 0., 1., dx=200.)

    # uniform matter weight function
    # CAMB requires linear ramp for low redshifts
    ws = glass.shells.tophat_windows(zb, weight=glass.ext.camb.camb_tophat_weight)

    # compute angular matter power spectra with CAMB
    cls = glass.ext.camb.matter_cls(pars, lmax, ws)



.. GENERATED FROM PYTHON SOURCE LINES 55-58

Save
----
We save the shell definitions to file, for use in other examples.

.. GENERATED FROM PYTHON SOURCE LINES 58-59

.. code-block:: Python

    np.save('cls.npy', cls)


.. _sphx_glr_download_basic_shells.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: shells.ipynb <shells.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: shells.py <shells.py>`
